{"version":3,"sources":["apolloClient.js","components/queries.js","store/actions/index.js","components/Paises.js","components/PaisDetalhe.js","components/PaisEdicao.js","routes/index.js","store/index.js","App.js","index.js"],"names":["cache","InMemoryCache","addTypename","apolloClient","ApolloClient","uri","GET_PAISES","query","gql","setDetalhePais","pais","type","withRouter","connect","state","paises","dispatch","history","useState","search","setSearch","filteredCountries","setFilteredCountries","useEffect","then","result","Action","data","Country","filter","country","name","toLowerCase","includes","style","margin","placeholder","onChange","e","target","value","map","Card","className","key","_id","width","Img","variant","src","flag","svgFile","Body","Title","Text","capital","Button","onClick","push","goToEditPais","goToPaisDetalhe","paisAtivo","goBack","ListGroup","Item","area","population","topLevelDomains","setPais","Form","Group","controlId","Label","Control","Routes","exact","path","component","Paises","PaisDetalhe","PaisEdicao","store","createStore","action","obj","find","item","sort","a","b","App","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.ac9e119b.chunk.js","sourcesContent":["import ApolloClient from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst cache =  new InMemoryCache({\n  addTypename: false\n});\n\nconst apolloClient = new ApolloClient({\n  uri: 'https://countries-274616.ew.r.appspot.com',\n  cache\n});\n\nexport default apolloClient;","import gql from 'graphql-tag';\n\nexport const GET_PAISES = {\n  query: gql`\n    {\n      Country {\n        _id,\n        name,\n        capital,\n        flag{svgFile},\n        area,\n        population,\n        topLevelDomains {\n          name\n        }\n     } \n    }\n  `\n};","export function setDetalhePais(pais) {\n  return {\n    type: 'SET_DETALHE_PAIS',\n    pais\n  }\n};\n\nexport function setDadosPaises(paises) {\n  return {\n    type: 'SET_PAISES',\n    paises\n  }\n};\n\nexport function setSalvarPais(pais) {\n  return {\n    type: 'SET_SALVAR_PAIS',\n    pais\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport apolloClient from '../apolloClient';\nimport { GET_PAISES } from './queries';\nimport * as Action from './../store/actions';\n\n// Requisitos\n// - Crie uma lista de cards para exibir os países mostrando a bandeira, o nome e a capital dele; \n// - Possibilite o usuário buscar países; \n// - Na lista, o usuário pode ir para a página de detalhes do país e ver uma lista mais completa de informações \n\n\nfunction Paises({ paises, dispatch, history }) {\n\n  function goToPaisDetalhe(pais) {\n    dispatch(Action.setDetalhePais(pais));\n    history.push('/detalhe')\n  }\n\n  function goToEditPais(pais) {\n    dispatch(Action.setDetalhePais(pais));\n    history.push('/edicao')\n  }\n\n  function consultarPaises() {\n    if (paises) {\n      return\n    }\n    apolloClient.query(GET_PAISES)\n      .then(result => {\n        dispatch(Action.setDadosPaises(result.data.Country));\n      });\n  };\n\n  const [search, setSearch] = useState(\"\");\n  const [filteredCountries, setFilteredCountries] = useState([]);\n\n  useEffect(() => {\n    consultarPaises()\n  }, []);\n\n  useEffect(() => {\n    setFilteredCountries(\n      paises?.filter((country) => country.name.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [paises, search]);\n\n  return (\n    <>\n      <div style={{ margin: \"20px\" }}>\n        <div>\n          <input type=\"text\" placeholder=\"Filtrar...\" onChange={(e) => setSearch(e.target.value)} />\n        </div>\n        <br />\n          {filteredCountries?.map(pais => (\n\n            <Card className=\"p-3\" key={pais._id} style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src={pais?.flag?.svgFile} />\n              <Card.Body>\n                <Card.Title>{pais.name}</Card.Title>\n                <Card.Text>\n                  {pais.capital}\n                </Card.Text>\n                <Button onClick={() => goToEditPais(pais)} variant=\"primary\">Editar</Button>{' '}\n                <Button onClick={() => goToPaisDetalhe(pais)} variant=\"info\">+ Detalhes</Button>\n              </Card.Body>\n            </Card>\n          ))}\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  paises: state.paises\n})\n\nexport default withRouter(connect(mapStateToProps)(Paises));","import React from 'react';\nimport { Button, Card, ListGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\n\nconst PaisDetalhe = ({ paisAtivo, history }) => {\n\n  return (\n    <div style={{ margin: \"20px\" }}>\n    <Button onClick={() => history.goBack()} variant='secondary'>Voltar</Button>\n    <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src={paisAtivo?.flag?.svgFile} />\n      <Card.Body>\n        <Card.Title>{paisAtivo?.name}</Card.Title>\n        \n        <ListGroup variant=\"flush\">\n        <ListGroup.Item>Capital - {paisAtivo?.capital}</ListGroup.Item>\n        <ListGroup.Item>Área - {paisAtivo?.area}</ListGroup.Item>\n        <ListGroup.Item>População - {paisAtivo?.population}</ListGroup.Item>\n        <ListGroup.Item>Domínio - {paisAtivo?.topLevelDomains[0]?.name}</ListGroup.Item>\n      </ListGroup>\n\n        \n      </Card.Body>\n    </Card>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  paisAtivo: state.paisAtivo\n})\n\nexport default withRouter(connect(mapStateToProps)(PaisDetalhe));","import * as Action from './../store/actions';\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\n\nconst PaisEdicao = ({ paisAtivo, dispatch, history }) => {\n  const [pais, setPais] = useState(paisAtivo);\n\n  function salvar() {\n    dispatch(Action.setSalvarPais(pais));\n    history.push('/')\n  };\n\n  return (\n\n    <div style={{ margin: \"20px\" }}>\n      <Button onClick={() => history.goBack()} variant='secondary'>Voltar</Button>\n\n      <Form>\n        <Form.Group controlId=\"FormNome\">\n          <Form.Label>Nome</Form.Label>\n          <Form.Control type=\"text\" value={pais?.name || ''} onChange={e => setPais({ ...pais, name: e.target.value })}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formCapital\">\n          <Form.Label>Capital</Form.Label>\n          <Form.Control type=\"text\"value={pais?.capital || ''} onChange={e => setPais({ ...pais, capital: e.target.value })}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formArea\">\n          <Form.Label>Área</Form.Label>\n          <Form.Control type=\"text\" value={pais?.area || ''} onChange={e => setPais({ ...pais, area: e.target.value })}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formPopulation\">\n          <Form.Label>População</Form.Label>\n          <Form.Control type=\"text\" value={pais?.population || ''} onChange={e => setPais({ ...pais, population: e.target.value })} />\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={() => salvar()}>\n          Salvar\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  paisAtivo: state.paisAtivo\n})\n\nexport default withRouter(connect(mapStateToProps)(PaisEdicao));","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Paises from \"./../components/Paises\";\nimport PaisDetalhe from \"./../components/PaisDetalhe\";\nimport PaisEdicao from \"../components/PaisEdicao\";\n\n\nconst Routes = () => (\n  <BrowserRouter>\n  <Switch>\n    <Route exact path=\"/\" component={Paises} />\n    <Route path=\"/detalhe\" component={PaisDetalhe} />\n    <Route path=\"/edicao\" component={PaisEdicao} />\n  </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;","import { createStore } from 'redux';\n\n\nfunction reducer(state, action) {\n  if (action.type === 'SET_PAISES') {\n\n    return {\n      ...state,\n      paises: action.paises\n    }\n  }\n\n  if (action.type === 'SET_DETALHE_PAIS') {\n\n    return {\n      ...state,\n      paisAtivo: action.pais\n    }\n  }\n\n  if (action.type === 'SET_SALVAR_PAIS') {\n\n    const obj = state.paises.find(obj => obj._id === action.pais._id);\n    if (obj) {\n      state.paises = state.paises.filter(item => item !== obj)\n    }\n    state.paises.push(action.pais);\n    state.paises.sort(function(a, b) {return a.name > b.name})\n\n    return {\n      ...state,\n      paisAtivo: action.pais\n    }\n  }\n\n  return {\n    paises: null,\n    paisAtivo: null\n  };\n}\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Routes from './routes/index';\nimport store from './store';\n// import Paises from './components/Paises.js'\n\nconst App = () => (\n\n  <Provider store={store}>\n    <Routes />\n  </Provider>\n\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport apolloClient from './apolloClient'\nimport { ApolloProvider } from 'react-apollo';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={apolloClient}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}